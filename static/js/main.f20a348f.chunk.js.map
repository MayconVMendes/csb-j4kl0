{"version":3,"sources":["components/Navbar/Navbar.js","components/TaskItem/TaskItem.js","components/TaskList/TaskList.js","App.js","index.js"],"names":["Navbar","className","TaskItem","id","title","taskState","onTaskUpdate","onDeleteTask","React","useState","isEditing","setEditing","editableTitle","setEditableTitle","type","value","onChange","event","newTitle","target","onKeyPress","key","length","onClick","e","TaskList","onAddTask","tasks","map","task","state","idAcc","App","setTasks","addTask","newTask","existingTasks","uptadeTask","deleteTask","filter","t","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f20a348f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./navbar.css\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <span>React Kanban</span>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./task-item.css\";\r\n\r\nexport default function TaskItem({\r\n  id,\r\n  title,\r\n  taskState,\r\n  onTaskUpdate,\r\n  onDeleteTask\r\n}) {\r\n  const [isEditing, setEditing] = React.useState(false);\r\n  const [editableTitle, setEditableTitle] = React.useState(title);\r\n\r\n  const onTitleChange = (event) => {\r\n    const newTitle = event.target.value;\r\n    setEditableTitle(newTitle);\r\n    onTaskUpdate(id, newTitle, taskState);\r\n  };\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      setEditing(false);\r\n      if (editableTitle.length === 0) {\r\n        onDeleteTask(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onTaskStateChange = (event) => {\r\n    onTaskUpdate(id, title, event.target.value);\r\n  };\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <div className=\"task-item\">\r\n        <input\r\n          type=\"text\"\r\n          value={editableTitle}\r\n          onChange={onTitleChange}\r\n          onKeyPress={onKeyPress}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"task-item\">\r\n        <div onClick={(e) => setEditing(true)}>{editableTitle}</div>\r\n        <select onChange={onTaskStateChange} value={taskState}>\r\n          <option value={\"Pendente\"}>Pendente</option>\r\n          <option value={\"Fazendo\"}>Fazendo</option>\r\n          <option value={\"Completa\"}>Completa</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  taskState: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\r\nimport \"./tasklist.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\n\r\nexport default function TaskList({\r\n  title,\r\n  taskState,\r\n  onAddTask,\r\n  tasks,\r\n  onTaskUpdate,\r\n  onDeleteTask\r\n}) {\r\n  const addTask = () => {\r\n    onAddTask(\"Nova Tarefa\", taskState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasklist\">\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"content\">\r\n        {tasks.map((task) => {\r\n          return (\r\n            <TaskItem\r\n              key={task.id}\r\n              id={task.id}\r\n              title={task.title}\r\n              taskState={task.state}\r\n              onTaskUpdate={onTaskUpdate}\r\n              onDeleteTask={onDeleteTask}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <button onClick={addTask}>Adicionar Tarefa</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onAddTask: PropTypes.func.isRequired,\r\n  tasks: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport TaskList from \"./components/TaskList/TaskList\";\n\nlet idAcc = 0;\nconst generateId = () => {\n  idAcc = idAcc + 1;\n  return idAcc;\n};\n\nexport default function App() {\n  const [tasks, setTasks] = React.useState([]);\n\n  const addTask = (title, state) => {\n    const newTask = {\n      id: generateId(),\n      title,\n      state\n    };\n    setTasks((existingTasks) => {\n      return [...existingTasks, newTask];\n    });\n  };\n\n  const uptadeTask = (id, title, state) => {\n    setTasks((existingTasks) => {\n      return existingTasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, title, state };\n        } else {\n          return task;\n        }\n      });\n    });\n  };\n\n  const deleteTask = (id) => {\n    setTasks((existingTasks) => {\n      return existingTasks.filter((task) => task.id !== id);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container\">\n        <TaskList\n          title={\"Pendente\"}\n          onAddTask={addTask}\n          taskState={\"Pendente\"}\n          tasks={tasks.filter((t) => t.state === \"Pendente\")}\n          onTaskUpdate={uptadeTask}\n          onDeleteTask={deleteTask}\n        />\n        <TaskList\n          title={\"Fazendo\"}\n          onAddTask={addTask}\n          taskState={\"Fazendo\"}\n          tasks={tasks.filter((t) => t.state === \"Fazendo\")}\n          onTaskUpdate={uptadeTask}\n          onDeleteTask={deleteTask}\n        />\n        <TaskList\n          title={\"Completa\"}\n          onAddTask={addTask}\n          taskState={\"Completa\"}\n          tasks={tasks.filter((t) => t.state === \"Completa\")}\n          onTaskUpdate={uptadeTask}\n          onDeleteTask={deleteTask}\n        />\n        {/* <TaskList title={\"Fazendo\"} />\n        <TaskList title={\"Completa\"} /> */}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}